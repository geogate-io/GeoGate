name: Test Catalyst Plugin with OSMesa

env:
  backend: osmesa
  catalyst: 2.0.0
  conduit: 0.9.2
  compiler: gcc@14.2.0
  coupling: spmd
  esmf: 8.8.0
  paraview: 5.13.1
  spack: prereleases/v1.0.0-alpha.4
  catalyst_script: "pv_write.py:pv_two_channel.py" 

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    types: [opened, synchronize, reopened, labeled, unlabeled]
    branches: [ main ]
  schedule:
    - cron: '0 0 * * MON'
    - cron: '0 0 * * FRI'

jobs:
  run-app:
    runs-on: ubuntu-24.04
    steps:
    - name: Checkout Component Repository
      uses: actions/checkout@v4
      with:
        path: ${{ github.workspace }}/app/geogate

    - name: Create Run Environment
      id: create-env
      uses: ./app/geogate/.github/actions/create_env
      with:
        backend: ${{ env.backend }}
        catalyst: ${{ env.catalyst }}
        conduit: ${{ env.conduit }}
        compiler: ${{ env.compiler }}
        esmf: ${{ env.esmf }}
        install_dir: ${{ github.workspace }}/app
        paraview: ${{ env.paraview }}
        spack: ${{ env.spack }}

    - name: Install GeoGate
      id: install-geogate
      uses: ./app/geogate/.github/actions/install_geogate
      with:
        compiler: ${{ env.compiler }}
        install_dir: ${{ github.workspace }}/app
        spack_dir: ${{ github.workspace }}/app/spack
        use_python: OFF
        use_catalyst: ON

    - name: Install CDEPS
      id: install-cdeps
      uses: ./app/geogate/.github/actions/install_cdeps
      with:
        compiler: ${{ env.compiler }}
        install_dir: ${{ github.workspace }}/app
        spack_dir: ${{ github.workspace }}/app/spack

    - name: Run Simulation 
      uses: ./app/geogate/.github/actions/case_run
      with:
        compiler: ${{ env.compiler }}
        install_dir: ${{ github.workspace }}/app
        spack_dir: ${{ github.workspace }}/app/spack
        cdeps_dir: ${{ github.workspace }}/app/cdeps/install
        geogate_dir: ${{ github.workspace }}/app/geogate/install

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      if: ${{ always() }}
      with:
        name: run
        path: |
          ${{ github.workspace }}/app/*.png
          ${{ github.workspace }}/app/PET*
          ${{ github.workspace }}/app/out_err.txt
          ${{ github.workspace }}/app/*.log
          ${{ github.workspace }}/app/output
        retention-days: 2
