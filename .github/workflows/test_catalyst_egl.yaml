name: Test Catalyst Plugin with EGL

env:
  backend: egl
  catalyst: 2.0.0
  conduit: 0.9.2
  compiler: gcc@14.2.0
  coupling: spmd
  esmf: 8.8.0
  paraview: 5.13.2
  spack: prereleases/v1.0.0-alpha.4

on:
  push:
    branches: [ feature/cicd ]

jobs:
  run-app:
    runs-on: ubuntu-24.04
    steps:
    - name: Checkout Component Repository
      uses: actions/checkout@v4
      with:
        path: ${{ github.workspace }}/app/geogate

    - name: Create Run Environment
      id: create-env
      uses: ./app/geogate/.github/actions/create_env
      with:
        backend: ${{ env.backend }}
        catalyst: ${{ env.catalyst }}
        conduit: ${{ env.conduit }}
        compiler: ${{ env.compiler }}
        esmf: ${{ env.esmf }}
        install_dir: ${{ github.workspace }}/app
        paraview: ${{ env.paraview }}
        spack: ${{ env.spack }}

#    - name: Test
#      run: |
#        echo ${{ github.workspace }}
#        echo ${{ steps.create-env.outputs.cache_name }}
#        echo ${{ steps.create-env.outputs.pkgs_list }}
#      shell: bash

    - name: Checkout CDEPS Data Components
      uses: actions/checkout@v4
      with:
        repository: ESCOMP/CDEPS
        path: ${{ github.workspace }}/app/cdeps
        submodules: true

    - name: Install CDEPS
      run: |
        cd ${{ github.workspace }}/app
        . spack/share/spack/setup-env.sh
        . $(spack location -i lmod)/lmod/lmod/init/bash
        spack env activate test
        cat /home/runner/.spack/packages.yaml
        module load esmf
        export COMPILER_MAJOR_VER=`echo ${{ env.compiler }} | awk -F@ '{print $2}' | awk -F. '{print $1}'`
        export FC=/usr/bin/gfortran-$COMPILER_MAJOR_VER
        export CC=/usr/bin/gcc-$COMPILER_MAJOR_VER
        export CXX=/usr/bin/g++-$COMPILER_MAJOR_VER
        cd cdeps
        mkdir build
        cd build
        cmake -DCMAKE_INSTALL_PREFIX=${{ github.workspace }}/app/cdeps/install \
          -DPIO_C_LIBRARY=$parallelio_ROOT/lib \
          -DPIO_C_INCLUDE_DIR=$parallelio_ROOT/include \
          -DPIO_Fortran_LIBRARY=$parallelio_ROOT/lib \
          -DPIO_Fortran_INCLUDE_DIR=$parallelio_ROOT/include \
          -DCMAKE_Fortran_FLAGS="-DCPRGNU -ffree-form -ffree-line-length-none -fallow-argument-mismatch" \
          -DDISABLE_FoX=ON ../
        make VERBOSE=1
        make install
      shell: bash

    - name: Install GeoGate
      run: |
        cd ${{ github.workspace }}/app
        . spack/share/spack/setup-env.sh
        . $(spack location -i lmod)/lmod/lmod/init/bash
        spack env activate test
        module load esmf
        module load libcatalyst
        module load conduit
        export COMPILER_MAJOR_VER=`echo ${{ env.compiler }} | awk -F@ '{print $2}' | awk -F. '{print $1}'`
        export FC=/usr/bin/gfortran-$COMPILER_MAJOR_VER
        export CC=/usr/bin/gcc-$COMPILER_MAJOR_VER
        export CXX=/usr/bin/g++-$COMPILER_MAJOR_VER
        cd geogate
        mkdir build
        cd build
        cmake -DCMAKE_INSTALL_PREFIX=${{ github.workspace }}/app/geogate/install \
           -DGEOGATE_USE_PYTHON=ON \
           -DGEOGATE_USE_CATALYST=ON \
           -DCMAKE_Fortran_FLAGS="-ffree-form -ffree-line-length-none" \
           ../src/
        make VERBOSE=1
        make install
      shell: bash
